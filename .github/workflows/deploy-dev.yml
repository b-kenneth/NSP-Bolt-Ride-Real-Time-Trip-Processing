name: Deploy to Development

on:
  push:
    branches: [develop]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ENVIRONMENT: dev

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          
      - name: Run tests
        run: |
          pytest tests/unit/ -v || echo "Tests completed"

  deploy-dev:
    needs: test
    runs-on: ubuntu-latest
    environment: development
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Package Lambda functions
        run: |
          echo "ðŸ“¦ Packaging Lambda functions for development..."
          
          # Package stream processor
          cd src/lambda/stream_processor
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt -t .
          fi
          zip -r ../../../stream_processor-dev.zip .
          cd ../../..
          
          # Package aggregation function
          # cd src/lambda/aggregation
          # if [ -f requirements.txt ]; then
          #   pip install -r requirements.txt -t .
          # fi
          # zip -r ../../../aggregation-dev.zip .
          # cd ../../..
          
      - name: Deploy Stream Processor Lambda
        run: |
          echo "ðŸš€ Deploying stream processor to AWS Lambda..."

          aws lambda wait function-updated --function-name nsp-bolt-stream-processor-dev
          aws lambda update-function-code \
            --function-name nsp-bolt-stream-processor-dev \
            --zip-file fileb://stream_processor-dev.zip \
            --publish

          aws lambda wait function-updated --function-name nsp-bolt-stream-processor-dev  
          aws lambda update-function-configuration \
            --function-name nsp-bolt-stream-processor-dev \
            --environment Variables="{ENVIRONMENT=dev,TABLE_NAME=nsp-bolt-trips-dev,BUCKET_NAME=nsp-bolt-analytics-dev}"
            
      # - name: Deploy Aggregation Lambda
      #   run: |
      #     echo "ðŸš€ Deploying aggregation function to AWS Lambda..."
      #     aws lambda update-function-code \
      #       --function-name nsp-bolt-aggregation-dev \
      #       --zip-file fileb://aggregation-dev.zip \
      #       --publish
            
      #     aws lambda update-function-configuration \
      #       --function-name nsp-bolt-aggregation-dev \
      #       --environment Variables="{ENVIRONMENT=dev,TABLE_NAME=nsp-bolt-trips-dev,BUCKET_NAME=nsp-bolt-analytics-dev}"
            
      - name: Verify Deployment
        run: |
          echo "âœ… Verifying Lambda function deployments..."
          
          # Check stream processor
          STREAM_VERSION=$(aws lambda get-function --function-name nsp-bolt-stream-processor-dev --query 'Configuration.Version' --output text)
          echo "Stream processor version: $STREAM_VERSION"
          
          # Check aggregation function
          # AGG_VERSION=$(aws lambda get-function --function-name nsp-bolt-aggregation-dev --query 'Configuration.Version' --output text)
          # echo "Aggregation function version: $AGG_VERSION"
          
          echo "ðŸŽ‰ Development deployment completed successfully!"
